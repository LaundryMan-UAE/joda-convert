//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/AnnotationStringConverterFactory.java
//

#ifndef _OrgJodaConvertAnnotationStringConverterFactory_H_
#define _OrgJodaConvertAnnotationStringConverterFactory_H_

@class IOSClass;
@class JavaLangReflectMethod;
@class OrgJodaConvertMethodConstructorStringConverter;
@class OrgJodaConvertMethodsStringConverter;
@protocol OrgJodaConvertStringConverter;

#include "J2ObjC_header.h"
#include "StringConverterFactory.h"

/**
 @brief Factory for <code>StringConverter</code> looking up annotations.
 <p> This class is immutable and thread-safe.
 @since 1.5
 */
@interface OrgJodaConvertAnnotationStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory > {
}

/**
 @brief Finds a converter by type.
 @param cls the type to lookup, not null
 @return the converter, null if not found
 @throws RuntimeException (or subclass) if source code is invalid
 */
- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

FOUNDATION_EXPORT BOOL OrgJodaConvertAnnotationStringConverterFactory_initialized;
J2OBJC_STATIC_INIT(OrgJodaConvertAnnotationStringConverterFactory)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertAnnotationStringConverterFactory_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaConvertAnnotationStringConverterFactory, INSTANCE_, id<OrgJodaConvertStringConverterFactory>)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertAnnotationStringConverterFactory)

#endif // _OrgJodaConvertAnnotationStringConverterFactory_H_
