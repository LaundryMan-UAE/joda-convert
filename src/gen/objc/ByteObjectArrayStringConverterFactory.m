//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/factory/ByteObjectArrayStringConverterFactory.java
//

#include "ByteObjectArrayStringConverterFactory.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "StringConverter.h"
#include "StringConverterFactory.h"
#include "java/lang/Byte.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"

#pragma clang diagnostic ignored "-Wprotocol"

BOOL OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_initialized = NO;

@implementation OrgJodaConvertFactoryByteObjectArrayStringConverterFactory

id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_INSTANCE_;

- (instancetype)init {
  return [super init];
}

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls {
  if (cls == [IOSObjectArray iosClassWithType:[IOSClass classWithClass:[JavaLangByte class]]]) {
    return OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_get_INSTANCE();
  }
  return nil;
}

- (NSString *)description {
  return [[self getClass] getSimpleName];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryByteObjectArrayStringConverterFactory class]) {
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_INSTANCE_, nil, [[OrgJodaConvertFactoryByteObjectArrayStringConverterFactory alloc] init]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ByteObjectArrayStringConverterFactory", NULL, 0x2, NULL },
    { "findConverterWithIOSClass:", "findConverter", "Lorg.joda.convert.StringConverter;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x19, "Lorg.joda.convert.StringConverterFactory;", &OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_INSTANCE_,  },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryByteObjectArrayStringConverterFactory = { "ByteObjectArrayStringConverterFactory", "org.joda.convert.factory", NULL, 0x11, 3, methods, 1, fields, 0, NULL};
  return &_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory;
}

@end

BOOL OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum

IOSObjectArray * OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_EMPTY_;
NSString * OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_HEX_ = @"0123456789ABCDEF";

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum *e = OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_EMPTY_, nil, [IOSObjectArray newArrayWithLength:0 type:[IOSClass classWithClass:[JavaLangByte class]]]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.ByteObjectArrayStringConverterFactory$ByteArrayStringConverter;", &OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[Ljava.lang.Byte;", &OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_EMPTY_,  },
    { "HEX_", NULL, 0x1a, "Ljava.lang.String;", &OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_HEX_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.ByteObjectArrayStringConverterFactory$ByteArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum = { "ByteArrayStringConverter", "org.joda.convert.factory", "ByteObjectArrayStringConverterFactory", 0x4408, 1, methods, 3, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_] autorelease];
  for (jint i = 0; i < array->size_; i++) {
    if (IOSObjectArray_Get(array, i) == nil) {
      [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:'-'])) appendWithChar:'-'];
    }
    else {
      jint b = [((JavaLangByte *) nil_chk(IOSObjectArray_Get(array, i))) charValue];
      [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:[((NSString *) nil_chk(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_get_HEX_())) charAtWithInt:URShift32((b & (jint) 0xF0), 4)]])) appendWithChar:[OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_get_HEX_() charAtWithInt:b & (jint) 0x0F]];
    }
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_get_EMPTY_();
  }
  if (((jint) [str length]) % 2 == 1) {
    @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"Invalid Byte[] string"] autorelease];
  }
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((jint) [str length]) / 2 type:[IOSClass classWithClass:[JavaLangByte class]]];
  for (jint i = 0; i < array->size_; i++) {
    NSString *in = [str substring:i * 2 endIndex:i * 2 + 2];
    if ([((NSString *) nil_chk(in)) isEqual:@"--"]) {
      IOSObjectArray_Set(array, i, nil);
    }
    else {
      IOSObjectArray_Set(array, i, JavaLangByte_valueOfWithByte_((jbyte) JavaLangInteger_parseIntWithNSString_withInt_(in, 16)));
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return [IOSObjectArray iosClassWithType:[IOSClass classWithClass:[JavaLangByte class]]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithJavaLangByteArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[Ljava.lang.Byte;", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "ByteObjectArrayStringConverterFactory$ByteArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverterEnum_$1;
}

@end
