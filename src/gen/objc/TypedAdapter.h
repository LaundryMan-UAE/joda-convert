//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/TypedAdapter.java
//

#ifndef _OrgJodaConvertTypedAdapter_H_
#define _OrgJodaConvertTypedAdapter_H_

@class IOSClass;
@protocol OrgJodaConvertStringConverter;

#import "JreEmulation.h"
#include "TypedStringConverter.h"

/**
 @brief Adapts <code>StringConverter</code> to <code>TypedStringConverter</code> .
 @param < T > the type of the converter
 @since 1.7
 */
@interface OrgJodaConvertTypedAdapter : NSObject < OrgJodaConvertTypedStringConverter > {
 @public
  id<OrgJodaConvertStringConverter> conv_;
  IOSClass *effectiveType_;
}

+ (id<OrgJodaConvertTypedStringConverter>)adaptWithIOSClass:(IOSClass *)cls
                          withOrgJodaConvertStringConverter:(id<OrgJodaConvertStringConverter>)converter;

- (instancetype)initWithOrgJodaConvertStringConverter:(id<OrgJodaConvertStringConverter>)conv
                                         withIOSClass:(IOSClass *)effectiveType;

- (NSString *)convertToStringWithId:(id)object;

- (id)convertFromStringWithIOSClass:(IOSClass *)cls
                       withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

- (NSString *)description;

- (void)copyAllFieldsTo:(OrgJodaConvertTypedAdapter *)other;

@end

__attribute__((always_inline)) inline void OrgJodaConvertTypedAdapter_init() {}

J2OBJC_FIELD_SETTER(OrgJodaConvertTypedAdapter, conv_, id<OrgJodaConvertStringConverter>)
J2OBJC_FIELD_SETTER(OrgJodaConvertTypedAdapter, effectiveType_, IOSClass *)
FOUNDATION_EXPORT id<OrgJodaConvertTypedStringConverter> OrgJodaConvertTypedAdapter_adaptWithIOSClass_withOrgJodaConvertStringConverter_(IOSClass *cls, id<OrgJodaConvertStringConverter> converter);

#endif // _OrgJodaConvertTypedAdapter_H_
