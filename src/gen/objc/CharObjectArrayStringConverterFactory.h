//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/factory/CharObjectArrayStringConverterFactory.java
//

#ifndef _OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_H_
#define _OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_H_

@class IOSClass;
@class IOSObjectArray;
@class JavaUtilRegexPattern;
@protocol OrgJodaConvertStringConverter;

#import "JreEmulation.h"
#include "StringConverterFactory.h"
#include "TypedStringConverter.h"
#include "java/lang/Enum.h"

/**
 @brief Factory for <code>StringConverter</code> providing support for Character object arrays as a string, using backslash as an escape.
 <p> Double backslash is a backslash. One backslash followed by a dash is null. <p> To use, simply register the instance with a <code>StringConvert</code> instance. <p> This class is immutable and thread-safe.
 @since 1.5
 */
@interface OrgJodaConvertFactoryCharObjectArrayStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory > {
}

/**
 @brief Restricted constructor.
 */
- (instancetype)init;

/**
 @brief Finds a converter by type.
 @param cls the type to lookup, not null
 @return the converter, null if not found
 @throws RuntimeException (or subclass) if source code is invalid
 */
- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

FOUNDATION_EXPORT BOOL OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_initialized;
J2OBJC_STATIC_INIT(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory)

FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory, INSTANCE_, id<OrgJodaConvertStringConverterFactory>)

FOUNDATION_EXPORT JavaUtilRegexPattern *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_DELIMITER_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory, DELIMITER_, JavaUtilRegexPattern *)

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverter) {
  OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverter_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter > {
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal;

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values();

+ (OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name;

FOUNDATION_EXPORT OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_valueOfWithNSString_(NSString *name);- (id)copyWithZone:(NSZone *)zone;

@end

FOUNDATION_EXPORT BOOL OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_initialized;
J2OBJC_STATIC_INIT(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum)

FOUNDATION_EXPORT OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values_[];

#define OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_INSTANCE OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values_[OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverter_INSTANCE]
J2OBJC_STATIC_FIELD_GETTER(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum, INSTANCE, OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_EMPTY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum, EMPTY_, IOSObjectArray *)

@interface OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_$1 : OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum {
}

- (NSString *)convertToStringWithId:(IOSObjectArray *)array;

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal;

@end

__attribute__((always_inline)) inline void OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_$1_init() {}

#endif // _OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_H_
