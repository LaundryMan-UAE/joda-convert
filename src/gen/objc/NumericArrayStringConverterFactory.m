//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/factory/NumericArrayStringConverterFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "NumericArrayStringConverterFactory.h"
#include "StringConverter.h"
#include "StringConverterFactory.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/util/regex/Pattern.h"

#pragma clang diagnostic ignored "-Wprotocol"

BOOL OrgJodaConvertFactoryNumericArrayStringConverterFactory_initialized = NO;

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory

id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE_;
JavaUtilRegexPattern * OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER_;

- (instancetype)init {
  return [super init];
}

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls {
  if ([((IOSClass *) nil_chk(cls)) isArray] && [((IOSClass *) nil_chk([cls getComponentType])) isPrimitive]) {
    if (cls == [IOSLongArray iosClass]) {
      return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_get_INSTANCE();
    }
    if (cls == [IOSIntArray iosClass]) {
      return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_get_INSTANCE();
    }
    if (cls == [IOSShortArray iosClass]) {
      return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_get_INSTANCE();
    }
    if (cls == [IOSDoubleArray iosClass]) {
      return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_get_INSTANCE();
    }
    if (cls == [IOSFloatArray iosClass]) {
      return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_get_INSTANCE();
    }
  }
  return nil;
}

- (NSString *)description {
  return [[self getClass] getSimpleName];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory class]) {
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE_, nil, [[OrgJodaConvertFactoryNumericArrayStringConverterFactory alloc] init]);
    JreStrongAssign(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER_, nil, JavaUtilRegexPattern_compileWithNSString_(@"[,]"));
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "NumericArrayStringConverterFactory", NULL, 0x2, NULL },
    { "findConverterWithIOSClass:", "findConverter", "Lorg.joda.convert.StringConverter;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x19, "Lorg.joda.convert.StringConverterFactory;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE_,  },
    { "DELIMITER_", NULL, 0x18, "Ljava.util.regex.Pattern;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER_,  },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory = { "NumericArrayStringConverterFactory", "org.joda.convert.factory", NULL, 0x11, 3, methods, 2, fields, 0, NULL};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory;
}

@end

BOOL OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum

IOSLongArray * OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_EMPTY_;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_EMPTY_, nil, [IOSLongArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.NumericArrayStringConverterFactory$LongArrayStringConverter;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[J", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_EMPTY_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.NumericArrayStringConverterFactory$LongArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum = { "LongArrayStringConverter", "org.joda.convert.factory", "NumericArrayStringConverterFactory", 0x4408, 1, methods, 2, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSLongArray *)array {
  if (((IOSLongArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_ * 8] autorelease];
  [buf appendWithLong:IOSLongArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithLong:IOSLongArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSLongArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                   withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_get_EMPTY_();
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER_())) splitWithJavaLangCharSequence:str];
  IOSLongArray *array = [IOSLongArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSLongArray_GetRef(array, i) = JavaLangLong_parseLongWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return [IOSLongArray iosClass];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithLongArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[J", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "NumericArrayStringConverterFactory$LongArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverterEnum_$1;
}

@end

BOOL OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum

IOSIntArray * OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_EMPTY_;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_EMPTY_, nil, [IOSIntArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.NumericArrayStringConverterFactory$IntArrayStringConverter;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[I", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_EMPTY_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.NumericArrayStringConverterFactory$IntArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum = { "IntArrayStringConverter", "org.joda.convert.factory", "NumericArrayStringConverterFactory", 0x4408, 1, methods, 2, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSIntArray *)array {
  if (((IOSIntArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_ * 6] autorelease];
  [buf appendWithInt:IOSIntArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithInt:IOSIntArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSIntArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_get_EMPTY_();
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER_())) splitWithJavaLangCharSequence:str];
  IOSIntArray *array = [IOSIntArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSIntArray_GetRef(array, i) = JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return [IOSIntArray iosClass];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithIntArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[I", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "NumericArrayStringConverterFactory$IntArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverterEnum_$1;
}

@end

BOOL OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum

IOSShortArray * OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_EMPTY_;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_EMPTY_, nil, [IOSShortArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.NumericArrayStringConverterFactory$ShortArrayStringConverter;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[S", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_EMPTY_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.NumericArrayStringConverterFactory$ShortArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum = { "ShortArrayStringConverter", "org.joda.convert.factory", "NumericArrayStringConverterFactory", 0x4408, 1, methods, 2, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSShortArray *)array {
  if (((IOSShortArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_ * 3] autorelease];
  [buf appendWithInt:IOSShortArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithInt:IOSShortArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSShortArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                    withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_get_EMPTY_();
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER_())) splitWithJavaLangCharSequence:str];
  IOSShortArray *array = [IOSShortArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSShortArray_GetRef(array, i) = JavaLangShort_parseShortWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return [IOSShortArray iosClass];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithShortArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[S", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "NumericArrayStringConverterFactory$ShortArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverterEnum_$1;
}

@end

BOOL OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum

IOSDoubleArray * OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_EMPTY_;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_EMPTY_, nil, [IOSDoubleArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.NumericArrayStringConverterFactory$DoubleArrayStringConverter;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[D", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_EMPTY_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.NumericArrayStringConverterFactory$DoubleArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum = { "DoubleArrayStringConverter", "org.joda.convert.factory", "NumericArrayStringConverterFactory", 0x4408, 1, methods, 2, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSDoubleArray *)array {
  if (((IOSDoubleArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_ * 8] autorelease];
  [buf appendWithDouble:IOSDoubleArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithDouble:IOSDoubleArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSDoubleArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_get_EMPTY_();
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER_())) splitWithJavaLangCharSequence:str];
  IOSDoubleArray *array = [IOSDoubleArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSDoubleArray_GetRef(array, i) = JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return [IOSDoubleArray iosClass];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithDoubleArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[D", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "NumericArrayStringConverterFactory$DoubleArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverterEnum_$1;
}

@end

BOOL OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum

IOSFloatArray * OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_EMPTY_;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_EMPTY_, nil, [IOSFloatArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.NumericArrayStringConverterFactory$FloatArrayStringConverter;", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[F", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_EMPTY_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.NumericArrayStringConverterFactory$FloatArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum = { "FloatArrayStringConverter", "org.joda.convert.factory", "NumericArrayStringConverterFactory", 0x4408, 1, methods, 2, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSFloatArray *)array {
  if (((IOSFloatArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_ * 8] autorelease];
  [buf appendWithFloat:IOSFloatArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithFloat:IOSFloatArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSFloatArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                    withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_get_EMPTY_();
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER_())) splitWithJavaLangCharSequence:str];
  IOSFloatArray *array = [IOSFloatArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSFloatArray_GetRef(array, i) = JavaLangFloat_parseFloatWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return [IOSFloatArray iosClass];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithFloatArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[F", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "NumericArrayStringConverterFactory$FloatArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverterEnum_$1;
}

@end
