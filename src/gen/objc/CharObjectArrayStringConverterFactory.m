//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/factory/CharObjectArrayStringConverterFactory.java
//

#include "CharObjectArrayStringConverterFactory.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "StringConverter.h"
#include "StringConverterFactory.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Arrays.h"
#include "java/util/regex/Pattern.h"

#pragma clang diagnostic ignored "-Wprotocol"

BOOL OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_initialized = NO;

@implementation OrgJodaConvertFactoryCharObjectArrayStringConverterFactory

id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_INSTANCE_;
JavaUtilRegexPattern * OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_DELIMITER_;

- (instancetype)init {
  return [super init];
}

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls {
  if (cls == [IOSObjectArray iosClassWithType:[IOSClass classWithClass:[JavaLangCharacter class]]]) {
    return OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_get_INSTANCE();
  }
  return nil;
}

- (NSString *)description {
  return [[self getClass] getSimpleName];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryCharObjectArrayStringConverterFactory class]) {
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_INSTANCE_, nil, [[OrgJodaConvertFactoryCharObjectArrayStringConverterFactory alloc] init]);
    JreStrongAssign(&OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_DELIMITER_, nil, JavaUtilRegexPattern_compileWithNSString_(@"[,]"));
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CharObjectArrayStringConverterFactory", NULL, 0x2, NULL },
    { "findConverterWithIOSClass:", "findConverter", "Lorg.joda.convert.StringConverter;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x19, "Lorg.joda.convert.StringConverterFactory;", &OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_INSTANCE_,  },
    { "DELIMITER_", NULL, 0x18, "Ljava.util.regex.Pattern;", &OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_DELIMITER_,  },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryCharObjectArrayStringConverterFactory = { "CharObjectArrayStringConverterFactory", "org.joda.convert.factory", NULL, 0x11, 3, methods, 2, fields, 0, NULL};
  return &_OrgJodaConvertFactoryCharObjectArrayStringConverterFactory;
}

@end

BOOL OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_initialized = NO;

OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values_[1];

@implementation OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum

IOSObjectArray * OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_EMPTY_;

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values_ count:1 type:[IOSClass classWithClass:[OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values();
}

+ (OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_valueOfWithNSString_(name);
}

OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum *e = OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum class]) {
    OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_INSTANCE = [[OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_$1 alloc] initWithNSString:@"INSTANCE" withInt:0];
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_EMPTY_, nil, [IOSObjectArray newArrayWithLength:0 type:[IOSClass classWithClass:[JavaLangCharacter class]]]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x4019, "Lorg.joda.convert.factory.CharObjectArrayStringConverterFactory$CharecterArrayStringConverter;", &OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_INSTANCE,  },
    { "EMPTY_", NULL, 0x1a, "[Ljava.lang.Character;", &OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_EMPTY_,  },
  };
  static const char *superclass_type_args[] = {"Lorg.joda.convert.factory.CharObjectArrayStringConverterFactory$CharecterArrayStringConverter;"};
  static const J2ObjcClassInfo _OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum = { "CharecterArrayStringConverter", "org.joda.convert.factory", "CharObjectArrayStringConverterFactory", 0x4408, 1, methods, 2, fields, 1, superclass_type_args};
  return &_OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum;
}

@end

@implementation OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_$1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] initWithInt:array->size_ * 8] autorelease];
  for (jint i = 0; i < array->size_; i++) {
    if (IOSObjectArray_Get(array, i) == nil) {
      [buf appendWithNSString:@"\\-"];
    }
    else {
      jchar ch = [((JavaLangCharacter *) nil_chk(IOSObjectArray_Get(array, i))) charValue];
      if (ch == '\\') {
        [buf appendWithNSString:@"\\\\"];
      }
      else {
        [buf appendWithChar:ch];
      }
    }
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_get_EMPTY_();
  }
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((jint) [str length]) type:[IOSClass classWithClass:[JavaLangCharacter class]]];
  jint arrayPos = 0;
  jint pos;
  while ((pos = [str indexOf:'\\']) >= 0) {
    for (jint i = 0; i < pos; i++) {
      IOSObjectArray_Set(array, arrayPos++, JavaLangCharacter_valueOfWithChar_([str charAtWithInt:i]));
    }
    if ([str charAtWithInt:pos + 1] == '\\') {
      IOSObjectArray_Set(array, arrayPos++, JavaLangCharacter_valueOfWithChar_('\\'));
    }
    else if ([str charAtWithInt:pos + 1] == '-') {
      IOSObjectArray_Set(array, arrayPos++, nil);
    }
    else {
      @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"Invalid Character[] string, incorrect escape"] autorelease];
    }
    str = [str substring:pos + 2];
  }
  for (jint i = 0; i < ((jint) [((NSString *) nil_chk(str)) length]); i++) {
    IOSObjectArray_Set(array, arrayPos++, JavaLangCharacter_valueOfWithChar_([str charAtWithInt:i]));
  }
  return JavaUtilArrays_copyOfWithNSObjectArray_withInt_(array, arrayPos);
}

- (IOSClass *)getEffectiveType {
  return [IOSObjectArray iosClassWithType:[IOSClass classWithClass:[JavaLangCharacter class]]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "convertToStringWithJavaLangCharacterArray:", "convertToString", "Ljava.lang.String;", 0x1, NULL },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "[Ljava.lang.Character;", 0x1, NULL },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL },
    { "initWithNSString:withInt:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_$1 = { "$1", "org.joda.convert.factory", "CharObjectArrayStringConverterFactory$CharecterArrayStringConverter", 0xc010, 4, methods, 0, NULL, 0, NULL};
  return &_OrgJodaConvertFactoryCharObjectArrayStringConverterFactory_CharecterArrayStringConverterEnum_$1;
}

@end
