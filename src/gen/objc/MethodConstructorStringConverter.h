//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-convert/src/main/java/org/joda/convert/MethodConstructorStringConverter.java
//

#ifndef _OrgJodaConvertMethodConstructorStringConverter_H_
#define _OrgJodaConvertMethodConstructorStringConverter_H_

@class IOSClass;
@class JavaLangReflectConstructor;
@class JavaLangReflectMethod;

#import "JreEmulation.h"
#include "ReflectionStringConverter.h"

/**
 @brief Conversion to and from a string using a toString method and a fromString constructor.
 <p> The toString method must meet the following signature:<br /> <code>String anyName()</code> on Class T. <p> The fromString constructor must take a single <code>String</code> parameter. <p> MethodConstructorStringConverter is thread-safe and immutable.
 @param < T > the type of the converter
 */
@interface OrgJodaConvertMethodConstructorStringConverter : OrgJodaConvertReflectionStringConverter {
 @public
  /**
   @brief Conversion from a string.
   */
  JavaLangReflectConstructor *fromString_;
}

/**
 @brief Creates an instance using a method and a constructor.
 @param cls the class this converts for, not null
 @param toString the toString method, not null
 @param fromString the fromString method, not null
 @throws RuntimeException (or subclass) if the method signatures are invalid
 */
- (instancetype)initWithIOSClass:(IOSClass *)cls
       withJavaLangReflectMethod:(JavaLangReflectMethod *)toString
  withJavaLangReflectConstructor:(JavaLangReflectConstructor *)fromString;

/**
 @brief Converts the <code>String</code> to an object.
 @param cls the class to convert to, not null
 @param str the string to convert, not null
 @return the converted object, may be null but generally not
 */
- (id)convertFromStringWithIOSClass:(IOSClass *)cls
                       withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

- (void)copyAllFieldsTo:(OrgJodaConvertMethodConstructorStringConverter *)other;

@end

__attribute__((always_inline)) inline void OrgJodaConvertMethodConstructorStringConverter_init() {}

J2OBJC_FIELD_SETTER(OrgJodaConvertMethodConstructorStringConverter, fromString_, JavaLangReflectConstructor *)

#endif // _OrgJodaConvertMethodConstructorStringConverter_H_
