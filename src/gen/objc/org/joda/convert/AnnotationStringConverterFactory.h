//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/joda-convert/src/main/java/org/joda/convert/AnnotationStringConverterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaConvertAnnotationStringConverterFactory_INCLUDE_ALL")
#ifdef OrgJodaConvertAnnotationStringConverterFactory_RESTRICT
#define OrgJodaConvertAnnotationStringConverterFactory_INCLUDE_ALL 0
#else
#define OrgJodaConvertAnnotationStringConverterFactory_INCLUDE_ALL 1
#endif
#undef OrgJodaConvertAnnotationStringConverterFactory_RESTRICT

#if !defined (OrgJodaConvertAnnotationStringConverterFactory_) && (OrgJodaConvertAnnotationStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertAnnotationStringConverterFactory_INCLUDE))
#define OrgJodaConvertAnnotationStringConverterFactory_

#define OrgJodaConvertStringConverterFactory_RESTRICT 1
#define OrgJodaConvertStringConverterFactory_INCLUDE 1
#include "org/joda/convert/StringConverterFactory.h"

@class IOSClass;
@protocol OrgJodaConvertStringConverter;

/*!
 @brief Factory for <code>StringConverter</code> looking up annotations.
 <p>
 This class is immutable and thread-safe.
 @since 1.5
 */
@interface OrgJodaConvertAnnotationStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory >

#pragma mark Public

/*!
 @brief Finds a converter by type.
 @param cls  the type to lookup, not null
 @return the converter, null if not found
 @throws RuntimeException (or subclass) if source code is invalid
 */
- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertAnnotationStringConverterFactory)

/*!
 @brief Singleton instance.
 */
inline id<OrgJodaConvertStringConverterFactory> OrgJodaConvertAnnotationStringConverterFactory_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertAnnotationStringConverterFactory_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertAnnotationStringConverterFactory, INSTANCE, id<OrgJodaConvertStringConverterFactory>)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertAnnotationStringConverterFactory)

#endif

#pragma pop_macro("OrgJodaConvertAnnotationStringConverterFactory_INCLUDE_ALL")
