//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-convert/src/main/java/org/joda/convert/AnnotationStringConverterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaConvertAnnotationStringConverterFactory")
#ifdef RESTRICT_OrgJodaConvertAnnotationStringConverterFactory
#define INCLUDE_ALL_OrgJodaConvertAnnotationStringConverterFactory 0
#else
#define INCLUDE_ALL_OrgJodaConvertAnnotationStringConverterFactory 1
#endif
#undef RESTRICT_OrgJodaConvertAnnotationStringConverterFactory

#if !defined (OrgJodaConvertAnnotationStringConverterFactory_) && (INCLUDE_ALL_OrgJodaConvertAnnotationStringConverterFactory || defined(INCLUDE_OrgJodaConvertAnnotationStringConverterFactory))
#define OrgJodaConvertAnnotationStringConverterFactory_

#define RESTRICT_OrgJodaConvertStringConverterFactory 1
#define INCLUDE_OrgJodaConvertStringConverterFactory 1
#include "org/joda/convert/StringConverterFactory.h"

@class IOSClass;
@protocol OrgJodaConvertStringConverter;

/*!
 @brief Factory for <code>StringConverter</code> looking up annotations.
 <p>
  This class is immutable and thread-safe.
 @since 1.5
 */
@interface OrgJodaConvertAnnotationStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory >

#pragma mark Public

/*!
 @brief Finds a converter by type.
 @param cls the type to lookup, not null
 @return the converter, null if not found
 @throw RuntimeException(or subclass) if source code is invalid
 */
- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertAnnotationStringConverterFactory)

/*!
 @brief Singleton instance.
 */
inline id<OrgJodaConvertStringConverterFactory> OrgJodaConvertAnnotationStringConverterFactory_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertAnnotationStringConverterFactory_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertAnnotationStringConverterFactory, INSTANCE, id<OrgJodaConvertStringConverterFactory>)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertAnnotationStringConverterFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaConvertAnnotationStringConverterFactory")
