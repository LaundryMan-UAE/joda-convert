//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/joda-convert/src/main/java/org/joda/convert/TypedStringConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaConvertTypedStringConverter_INCLUDE_ALL")
#ifdef OrgJodaConvertTypedStringConverter_RESTRICT
#define OrgJodaConvertTypedStringConverter_INCLUDE_ALL 0
#else
#define OrgJodaConvertTypedStringConverter_INCLUDE_ALL 1
#endif
#undef OrgJodaConvertTypedStringConverter_RESTRICT

#if !defined (OrgJodaConvertTypedStringConverter_) && (OrgJodaConvertTypedStringConverter_INCLUDE_ALL || defined(OrgJodaConvertTypedStringConverter_INCLUDE))
#define OrgJodaConvertTypedStringConverter_

#define OrgJodaConvertStringConverter_RESTRICT 1
#define OrgJodaConvertStringConverter_INCLUDE 1
#include "org/joda/convert/StringConverter.h"

@class IOSClass;

/*!
 @brief Interface defining conversion to and from a <code>String</code> together with the type.
 <p>
 TypedStringConverter is an interface and must be implemented with care.
 Implementations must be immutable and thread-safe.
 @since 1.7
 */
@protocol OrgJodaConvertTypedStringConverter < OrgJodaConvertStringConverter, NSObject, JavaObject >

/*!
 @brief Gets the effective type that the converter works on.
 <p>
 For example, if a class declares the <code>FromString</code> and  <code>ToString</code>
 then the effective type of the converter is that class. If a subclass is
 queried for a converter, then the effective type is that of the superclass.
 @return the effective type
 */
- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertTypedStringConverter)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertTypedStringConverter)

#endif

#pragma pop_macro("OrgJodaConvertTypedStringConverter_INCLUDE_ALL")
