//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-convert/src/main/java/org/joda/convert/TypeStringConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaConvertTypeStringConverter")
#ifdef RESTRICT_OrgJodaConvertTypeStringConverter
#define INCLUDE_ALL_OrgJodaConvertTypeStringConverter 0
#else
#define INCLUDE_ALL_OrgJodaConvertTypeStringConverter 1
#endif
#undef RESTRICT_OrgJodaConvertTypeStringConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJodaConvertTypeStringConverter_) && (INCLUDE_ALL_OrgJodaConvertTypeStringConverter || defined(INCLUDE_OrgJodaConvertTypeStringConverter))
#define OrgJodaConvertTypeStringConverter_

#define RESTRICT_OrgJodaConvertAbstractTypeStringConverter 1
#define INCLUDE_OrgJodaConvertAbstractTypeStringConverter 1
#include "org/joda/convert/AbstractTypeStringConverter.h"

#define RESTRICT_OrgJodaConvertTypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "org/joda/convert/TypedStringConverter.h"

@class IOSClass;
@protocol JavaLangReflectType;

@interface OrgJodaConvertTypeStringConverter : OrgJodaConvertAbstractTypeStringConverter < OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (id<JavaLangReflectType>)convertFromStringWithIOSClass:(IOSClass *)cls
                                            withNSString:(NSString *)str;

- (NSString *)convertToStringWithId:(id<JavaLangReflectType>)object;

- (IOSClass *)getEffectiveType;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertTypeStringConverter)

FOUNDATION_EXPORT void OrgJodaConvertTypeStringConverter_initPackagePrivate(OrgJodaConvertTypeStringConverter *self);

FOUNDATION_EXPORT OrgJodaConvertTypeStringConverter *new_OrgJodaConvertTypeStringConverter_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaConvertTypeStringConverter *create_OrgJodaConvertTypeStringConverter_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertTypeStringConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgJodaConvertTypeStringConverter")
