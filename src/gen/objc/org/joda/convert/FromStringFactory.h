//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/joda-convert/src/main/java/org/joda/convert/FromStringFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaConvertFromStringFactory_INCLUDE_ALL")
#ifdef OrgJodaConvertFromStringFactory_RESTRICT
#define OrgJodaConvertFromStringFactory_INCLUDE_ALL 0
#else
#define OrgJodaConvertFromStringFactory_INCLUDE_ALL 1
#endif
#undef OrgJodaConvertFromStringFactory_RESTRICT

#if !defined (OrgJodaConvertFromStringFactory_) && (OrgJodaConvertFromStringFactory_INCLUDE_ALL || defined(OrgJodaConvertFromStringFactory_INCLUDE))
#define OrgJodaConvertFromStringFactory_

#define JavaLangAnnotationAnnotation_RESTRICT 1
#define JavaLangAnnotationAnnotation_INCLUDE 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Annotation used on a type to indicate that another class, the factory,
 provides the 'from string' method.
 <p>
 This annotation is applied at the type level, typically to an interface.
 It indicates the class which contains the relevant <code>FromString</code>
 annotation, which follows the normal rules.
 <p>
 For example, the interface <code>Foo</code> could be annotated to define its
 associated factory as being <code>FooFactory</code>. The <code>FooFactory</code>
 class would then be expected to provide a method returning <code>Foo</code>
 with a single <code>String</code> parameter, annotated with <code>FromString</code>.
 @since 1.4
 */
@protocol OrgJodaConvertFromStringFactory < JavaLangAnnotationAnnotation >

@property (readonly) IOSClass *factory;

@end

@interface OrgJodaConvertFromStringFactory : NSObject < OrgJodaConvertFromStringFactory > {
 @private
  IOSClass *factory_;
}

- (instancetype)initWithFactory:(IOSClass *)factory__;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFromStringFactory)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFromStringFactory)

#endif

#pragma pop_macro("OrgJodaConvertFromStringFactory_INCLUDE_ALL")
