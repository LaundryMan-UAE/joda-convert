//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-convert/src/main/java/org/joda/convert/TypedAdapter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/joda/convert/StringConverter.h"
#include "org/joda/convert/TypedAdapter.h"
#include "org/joda/convert/TypedStringConverter.h"

@interface OrgJodaConvertTypedAdapter () {
 @public
  id<OrgJodaConvertStringConverter> conv_;
  IOSClass *effectiveType_;
}

- (instancetype)initWithOrgJodaConvertStringConverter:(id<OrgJodaConvertStringConverter>)conv
                                         withIOSClass:(IOSClass *)effectiveType;

@end

J2OBJC_FIELD_SETTER(OrgJodaConvertTypedAdapter, conv_, id<OrgJodaConvertStringConverter>)
J2OBJC_FIELD_SETTER(OrgJodaConvertTypedAdapter, effectiveType_, IOSClass *)

__attribute__((unused)) static void OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(OrgJodaConvertTypedAdapter *self, id<OrgJodaConvertStringConverter> conv, IOSClass *effectiveType);

__attribute__((unused)) static OrgJodaConvertTypedAdapter *new_OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(id<OrgJodaConvertStringConverter> conv, IOSClass *effectiveType) NS_RETURNS_RETAINED;

@implementation OrgJodaConvertTypedAdapter

+ (id<OrgJodaConvertTypedStringConverter>)adaptWithIOSClass:(IOSClass *)cls
                          withOrgJodaConvertStringConverter:(id<OrgJodaConvertStringConverter>)converter {
  return OrgJodaConvertTypedAdapter_adaptWithIOSClass_withOrgJodaConvertStringConverter_(cls, converter);
}

- (instancetype)initWithOrgJodaConvertStringConverter:(id<OrgJodaConvertStringConverter>)conv
                                         withIOSClass:(IOSClass *)effectiveType {
  OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(self, conv, effectiveType);
  return self;
}

- (NSString *)convertToStringWithId:(id)object {
  return [((id<OrgJodaConvertStringConverter>) nil_chk(conv_)) convertToStringWithId:object];
}

- (id)convertFromStringWithIOSClass:(IOSClass *)cls
                       withNSString:(NSString *)str {
  return [((id<OrgJodaConvertStringConverter>) nil_chk(conv_)) convertFromStringWithIOSClass:cls withNSString:str];
}

- (IOSClass *)getEffectiveType {
  return effectiveType_;
}

- (NSString *)description {
  return JreStrcat("$$", @"TypedAdapter:", [((id<OrgJodaConvertStringConverter>) nil_chk(conv_)) description]);
}

- (void)dealloc {
  if (conv_ != self) RELEASE_(conv_);
  RELEASE_(effectiveType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "adaptWithIOSClass:withOrgJodaConvertStringConverter:", "adapt", "Lorg.joda.convert.TypedStringConverter;", 0x8, NULL, "<R:Ljava/lang/Object;>(Ljava/lang/Class<TR;>;Lorg/joda/convert/StringConverter<TR;>;)Lorg/joda/convert/TypedStringConverter<TR;>;" },
    { "initWithOrgJodaConvertStringConverter:withIOSClass:", "TypedAdapter", NULL, 0x2, NULL, NULL },
    { "convertToStringWithId:", "convertToString", "Ljava.lang.String;", 0x1, NULL, "(TT;)Ljava/lang/String;" },
    { "convertFromStringWithIOSClass:withNSString:", "convertFromString", "TT;", 0x1, NULL, "(Ljava/lang/Class<+TT;>;Ljava/lang/String;)TT;" },
    { "getEffectiveType", NULL, "Ljava.lang.Class;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "conv_", NULL, 0x12, "Lorg.joda.convert.StringConverter;", NULL, "Lorg/joda/convert/StringConverter<TT;>;",  },
    { "effectiveType_", NULL, 0x12, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;",  },
  };
  static const J2ObjcClassInfo _OrgJodaConvertTypedAdapter = { 2, "TypedAdapter", "org.joda.convert", NULL, 0x10, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/joda/convert/TypedStringConverter<TT;>;" };
  return &_OrgJodaConvertTypedAdapter;
}

@end

id<OrgJodaConvertTypedStringConverter> OrgJodaConvertTypedAdapter_adaptWithIOSClass_withOrgJodaConvertStringConverter_(IOSClass *cls, id<OrgJodaConvertStringConverter> converter) {
  OrgJodaConvertTypedAdapter_initialize();
  if ([OrgJodaConvertTypedStringConverter_class_() isInstance:converter]) {
    return (id<OrgJodaConvertTypedStringConverter>) check_protocol_cast(converter, @protocol(OrgJodaConvertTypedStringConverter));
  }
  else {
    return [new_OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(converter, cls) autorelease];
  }
}

void OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(OrgJodaConvertTypedAdapter *self, id<OrgJodaConvertStringConverter> conv, IOSClass *effectiveType) {
  NSObject_init(self);
  OrgJodaConvertTypedAdapter_set_conv_(self, conv);
  OrgJodaConvertTypedAdapter_set_effectiveType_(self, effectiveType);
}

OrgJodaConvertTypedAdapter *new_OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(id<OrgJodaConvertStringConverter> conv, IOSClass *effectiveType) {
  OrgJodaConvertTypedAdapter *self = [OrgJodaConvertTypedAdapter alloc];
  OrgJodaConvertTypedAdapter_initWithOrgJodaConvertStringConverter_withIOSClass_(self, conv, effectiveType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertTypedAdapter)
