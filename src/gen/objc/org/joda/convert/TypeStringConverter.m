//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-convert/src/main/java/org/joda/convert/TypeStringConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/common/reflect/TypeToken.h"
#include "java/lang/reflect/Type.h"
#include "org/joda/convert/AbstractTypeStringConverter.h"
#include "org/joda/convert/TypeStringConverter.h"

@implementation OrgJodaConvertTypeStringConverter

- (instancetype)initPackagePrivate {
  OrgJodaConvertTypeStringConverter_initPackagePrivate(self);
  return self;
}

- (NSString *)convertToStringWithId:(id<JavaLangReflectType>)object {
  return [((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(object))) description];
}

- (id<JavaLangReflectType>)convertFromStringWithIOSClass:(IOSClass *)cls
                                            withNSString:(NSString *)str {
  return OrgJodaConvertAbstractTypeStringConverter_parseWithNSString_(str);
}

- (IOSClass *)getEffectiveType {
  return JavaLangReflectType_class_();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(convertToStringWithId:);
  methods[2].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[3].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "LJavaLangReflectType;", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+Ljava/lang/reflect/Type;>;Ljava/lang/String;)Ljava/lang/reflect/Type;", "()Ljava/lang/Class<*>;", "Lorg/joda/convert/AbstractTypeStringConverter;Lorg/joda/convert/TypedStringConverter<Ljava/lang/reflect/Type;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertTypeStringConverter = { "TypeStringConverter", "org.joda.convert", ptrTable, methods, NULL, 7, 0x10, 4, 0, -1, -1, -1, 6, -1 };
  return &_OrgJodaConvertTypeStringConverter;
}

@end

void OrgJodaConvertTypeStringConverter_initPackagePrivate(OrgJodaConvertTypeStringConverter *self) {
  OrgJodaConvertAbstractTypeStringConverter_initPackagePrivate(self);
}

OrgJodaConvertTypeStringConverter *new_OrgJodaConvertTypeStringConverter_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgJodaConvertTypeStringConverter, initPackagePrivate)
}

OrgJodaConvertTypeStringConverter *create_OrgJodaConvertTypeStringConverter_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgJodaConvertTypeStringConverter, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertTypeStringConverter)
