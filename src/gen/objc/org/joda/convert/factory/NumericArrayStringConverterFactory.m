//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/joda-convert/src/main/java/org/joda/convert/factory/NumericArrayStringConverterFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/util/regex/Pattern.h"
#include "org/joda/convert/StringConverter.h"
#include "org/joda/convert/StringConverterFactory.h"
#include "org/joda/convert/factory/NumericArrayStringConverterFactory.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory ()

/*!
 @brief Restricted constructor.
 */
- (instancetype)init;

@end

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_init(OrgJodaConvertFactoryNumericArrayStringConverterFactory *self);

__attribute__((unused)) static OrgJodaConvertFactoryNumericArrayStringConverterFactory *new_OrgJodaConvertFactoryNumericArrayStringConverterFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaConvertFactoryNumericArrayStringConverterFactory *create_OrgJodaConvertFactoryNumericArrayStringConverterFactory_init(void);

inline IOSLongArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_get_EMPTY(void);
static IOSLongArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, EMPTY, IOSLongArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 : OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter

- (NSString *)convertToStringWithId:(IOSLongArray *)array;

- (IOSLongArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                   withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSIntArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_get_EMPTY(void);
static IOSIntArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, EMPTY, IOSIntArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 : OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter

- (NSString *)convertToStringWithId:(IOSIntArray *)array;

- (IOSIntArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSShortArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_get_EMPTY(void);
static IOSShortArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, EMPTY, IOSShortArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 : OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter

- (NSString *)convertToStringWithId:(IOSShortArray *)array;

- (IOSShortArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                    withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSDoubleArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_get_EMPTY(void);
static IOSDoubleArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, EMPTY, IOSDoubleArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 : OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter

- (NSString *)convertToStringWithId:(IOSDoubleArray *)array;

- (IOSDoubleArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSFloatArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_get_EMPTY(void);
static IOSFloatArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, EMPTY, IOSFloatArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 : OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter

- (NSString *)convertToStringWithId:(IOSFloatArray *)array;

- (IOSFloatArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                    withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericArrayStringConverterFactory)

id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE;
JavaUtilRegexPattern *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER;

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls {
  if ([((IOSClass *) nil_chk(cls)) isArray] && [((IOSClass *) nil_chk([cls getComponentType])) isPrimitive]) {
    if (cls == IOSClass_longArray(1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_intArray(1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_shortArray(1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_doubleArray(1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_floatArray(1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE);
    }
  }
  return nil;
}

- (NSString *)description {
  return [[self java_getClass] getSimpleName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertStringConverter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findConverterWithIOSClass:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertStringConverterFactory;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "DELIMITER", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "findConverter", "LIOSClass;", "(Ljava/lang/Class<*>;)Lorg/joda/convert/StringConverter<*>;", "toString", &OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE, &OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter;LOrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter;LOrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter;LOrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter;LOrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory = { "NumericArrayStringConverterFactory", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, 6, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory class]) {
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE, new_OrgJodaConvertFactoryNumericArrayStringConverterFactory_init());
    JreStrongAssign(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER, JavaUtilRegexPattern_compileWithNSString_(@"[,]"));
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory)
  }
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_init(OrgJodaConvertFactoryNumericArrayStringConverterFactory *self) {
  NSObject_init(self);
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory *new_OrgJodaConvertFactoryNumericArrayStringConverterFactory_init() {
  J2OBJC_NEW_IMPL(OrgJodaConvertFactoryNumericArrayStringConverterFactory, init)
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory *create_OrgJodaConvertFactoryNumericArrayStringConverterFactory_init() {
  J2OBJC_CREATE_IMPL(OrgJodaConvertFactoryNumericArrayStringConverterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericArrayStringConverterFactory)

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)

OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[J", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericArrayStringConverterFactory$LongArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[J>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter = { "LongArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_EMPTY, [IOSLongArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSLongArray *)array {
  if (((IOSLongArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 8);
  [buf appendWithLong:IOSLongArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithLong:IOSLongArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSLongArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                   withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSLongArray *array = [IOSLongArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSLongArray_GetRef(array, i) = JavaLangLong_parseLongWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_longArray(1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[J", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[J", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[J>;Ljava/lang/String;)[J", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)

OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[I", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericArrayStringConverterFactory$IntArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[I>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter = { "IntArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_EMPTY, [IOSIntArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSIntArray *)array {
  if (((IOSIntArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 6);
  [buf appendWithInt:IOSIntArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithInt:IOSIntArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSIntArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSIntArray *array = [IOSIntArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSIntArray_GetRef(array, i) = JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_intArray(1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[I", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[I>;Ljava/lang/String;)[I", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)

OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[S", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericArrayStringConverterFactory$ShortArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[S>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter = { "ShortArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_EMPTY, [IOSShortArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSShortArray *)array {
  if (((IOSShortArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 3);
  [buf appendWithInt:IOSShortArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithInt:IOSShortArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSShortArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                    withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSShortArray *array = [IOSShortArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSShortArray_GetRef(array, i) = JavaLangShort_parseShortWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_shortArray(1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[S", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[S", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[S>;Ljava/lang/String;)[S", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)

OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[D", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericArrayStringConverterFactory$DoubleArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[D>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter = { "DoubleArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_EMPTY, [IOSDoubleArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSDoubleArray *)array {
  if (((IOSDoubleArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 8);
  [buf appendWithDouble:IOSDoubleArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithDouble:IOSDoubleArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSDoubleArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSDoubleArray *array = [IOSDoubleArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSDoubleArray_GetRef(array, i) = JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_doubleArray(1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[D", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[D", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[D>;Ljava/lang/String;)[D", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)

OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[F", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericArrayStringConverterFactory$FloatArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[F>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter = { "FloatArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_EMPTY, [IOSFloatArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *e = OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSFloatArray *)array {
  if (((IOSFloatArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 8);
  [buf appendWithFloat:IOSFloatArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithFloat:IOSFloatArray_Get(array, i)];
  }
  return [buf description];
}

- (IOSFloatArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                    withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSFloatArray *array = [IOSFloatArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_];
  for (jint i = 0; i < split->size_; i++) {
    *IOSFloatArray_GetRef(array, i) = JavaLangFloat_parseFloatWithNSString_(IOSObjectArray_Get(split, i));
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_floatArray(1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[F", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[F", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[F>;Ljava/lang/String;)[F", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}
