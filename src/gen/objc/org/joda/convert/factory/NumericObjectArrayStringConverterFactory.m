//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-convert/src/main/java/org/joda/convert/factory/NumericObjectArrayStringConverterFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/util/regex/Pattern.h"
#include "org/joda/convert/StringConverter.h"
#include "org/joda/convert/StringConverterFactory.h"
#include "org/joda/convert/factory/NumericObjectArrayStringConverterFactory.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory ()

/*!
 @brief Restricted constructor.
 */
- (instancetype)init;

@end

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory *self);

__attribute__((unused)) static OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory *new_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory *create_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init(void);

inline IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_get_EMPTY(void);
static IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter, EMPTY, IOSObjectArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 : OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter

- (NSString *)convertToStringWithId:(IOSObjectArray *)array;

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_get_EMPTY(void);
static IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter, EMPTY, IOSObjectArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 : OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter

- (NSString *)convertToStringWithId:(IOSObjectArray *)array;

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_get_EMPTY(void);
static IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter, EMPTY, IOSObjectArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 : OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter

- (NSString *)convertToStringWithId:(IOSObjectArray *)array;

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_get_EMPTY(void);
static IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter, EMPTY, IOSObjectArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 : OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter

- (NSString *)convertToStringWithId:(IOSObjectArray *)array;

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

inline IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_get_EMPTY(void);
static IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter, EMPTY, IOSObjectArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *self, NSString *__name, jint __ordinal);

@interface OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 : OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter

- (NSString *)convertToStringWithId:(IOSObjectArray *)array;

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1)

__attribute__((unused)) static void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory)

id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_INSTANCE;
JavaUtilRegexPattern *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DELIMITER;

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls {
  if ([((IOSClass *) nil_chk(cls)) isArray]) {
    if (cls == IOSClass_arrayType(JavaLangLong_class_(), 1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_arrayType(JavaLangInteger_class_(), 1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_arrayType(JavaLangShort_class_(), 1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_arrayType(JavaLangDouble_class_(), 1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE);
    }
    if (cls == IOSClass_arrayType(JavaLangFloat_class_(), 1)) {
      return JreLoadEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE);
    }
  }
  return nil;
}

- (NSString *)description {
  return [[self java_getClass] getSimpleName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertStringConverter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findConverterWithIOSClass:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertStringConverterFactory;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "DELIMITER", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "findConverter", "LIOSClass;", "(Ljava/lang/Class<*>;)Lorg/joda/convert/StringConverter<*>;", "toString", &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_INSTANCE, &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DELIMITER, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter;LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter;LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter;LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter;LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory = { "NumericObjectArrayStringConverterFactory", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, 6, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory class]) {
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_INSTANCE, new_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init());
    JreStrongAssign(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DELIMITER, JavaUtilRegexPattern_compileWithNSString_(@"[,]"));
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory)
  }
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory *self) {
  NSObject_init(self);
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory *new_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init() {
  J2OBJC_NEW_IMPL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, init)
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory *create_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_init() {
  J2OBJC_CREATE_IMPL(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory)

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter)

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[LJavaLangLong;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericObjectArrayStringConverterFactory$LongArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter = { "LongArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_EMPTY, [IOSObjectArray newArrayWithLength:0 type:JavaLangLong_class_()]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *e = OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 8);
  [buf appendWithId:IOSObjectArray_Get(array, 0) != nil ? IOSObjectArray_Get(array, 0) : (id) @"-"];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithId:IOSObjectArray_Get(array, i) != nil ? IOSObjectArray_Get(array, i) : (id) @"-"];
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_ type:JavaLangLong_class_()];
  for (jint i = 0; i < split->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(split, i))) isEqual:@"-"] == false) {
      IOSObjectArray_Set(array, i, JavaLangLong_valueOfWithLong_(JavaLangLong_parseLongWithNSString_(IOSObjectArray_Get(split, i))));
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_arrayType(JavaLangLong_class_(), 1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangLong;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[LJavaLangLong;", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[Ljava/lang/Long;>;Ljava/lang/String;)[Ljava/lang/Long;", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_LongArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter)

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[LJavaLangInteger;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericObjectArrayStringConverterFactory$IntArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter = { "IntArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_EMPTY, [IOSObjectArray newArrayWithLength:0 type:JavaLangInteger_class_()]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *e = OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 6);
  [buf appendWithId:IOSObjectArray_Get(array, 0) != nil ? IOSObjectArray_Get(array, 0) : (id) @"-"];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithId:IOSObjectArray_Get(array, i) != nil ? IOSObjectArray_Get(array, i) : (id) @"-"];
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_ type:JavaLangInteger_class_()];
  for (jint i = 0; i < split->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(split, i))) isEqual:@"-"] == false) {
      IOSObjectArray_Set(array, i, JavaLangInteger_valueOfWithInt_(JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(split, i))));
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_arrayType(JavaLangInteger_class_(), 1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangInteger;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[LJavaLangInteger;", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[Ljava/lang/Integer;>;Ljava/lang/String;)[Ljava/lang/Integer;", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_IntArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter)

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[LJavaLangShort;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericObjectArrayStringConverterFactory$ShortArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[Ljava/lang/Short;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter = { "ShortArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_EMPTY, [IOSObjectArray newArrayWithLength:0 type:JavaLangShort_class_()]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *e = OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 3);
  [buf appendWithId:IOSObjectArray_Get(array, 0) != nil ? IOSObjectArray_Get(array, 0) : (id) @"-"];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithId:IOSObjectArray_Get(array, i) != nil ? IOSObjectArray_Get(array, i) : (id) @"-"];
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_ type:JavaLangShort_class_()];
  for (jint i = 0; i < split->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(split, i))) isEqual:@"-"] == false) {
      IOSObjectArray_Set(array, i, JavaLangShort_valueOfWithShort_(JavaLangShort_parseShortWithNSString_(IOSObjectArray_Get(split, i))));
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_arrayType(JavaLangShort_class_(), 1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangShort;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[LJavaLangShort;", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[Ljava/lang/Short;>;Ljava/lang/String;)[Ljava/lang/Short;", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_ShortArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter)

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[LJavaLangDouble;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericObjectArrayStringConverterFactory$DoubleArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[Ljava/lang/Double;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter = { "DoubleArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_EMPTY, [IOSObjectArray newArrayWithLength:0 type:JavaLangDouble_class_()]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *e = OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 8);
  [buf appendWithId:IOSObjectArray_Get(array, 0) != nil ? IOSObjectArray_Get(array, 0) : (id) @"-"];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithId:IOSObjectArray_Get(array, i) != nil ? IOSObjectArray_Get(array, i) : (id) @"-"];
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_ type:JavaLangDouble_class_()];
  for (jint i = 0; i < split->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(split, i))) isEqual:@"-"] == false) {
      IOSObjectArray_Set(array, i, JavaLangDouble_valueOfWithDouble_(JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(split, i))));
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_arrayType(JavaLangDouble_class_(), 1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangDouble;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[LJavaLangDouble;", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[Ljava/lang/Double;>;Ljava/lang/String;)[Ljava/lang/Double;", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_DoubleArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter)

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[LJavaLangFloat;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/NumericObjectArrayStringConverterFactory$FloatArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[Ljava/lang/Float;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter = { "FloatArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter class]) {
    size_t allocSize = 0;
    size_t objSize_INSTANCE = class_getInstanceSize([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 class]);
    allocSize += objSize_INSTANCE;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE) = e = objc_constructInstance([OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 class], (void *)ptr), ptr += objSize_INSTANCE);
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1_initWithNSString_withInt_(e, @"INSTANCE", 0);
    JreStrongAssignAndConsume(&OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_EMPTY, [IOSObjectArray newArrayWithLength:0 type:JavaLangFloat_class_()]);
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_values() {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_class_()];
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *e = OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter)

@implementation OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1

- (NSString *)convertToStringWithId:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(array->size_ * 8);
  [buf appendWithId:IOSObjectArray_Get(array, 0) != nil ? IOSObjectArray_Get(array, 0) : (id) @"-"];
  for (jint i = 1; i < array->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:','])) appendWithId:IOSObjectArray_Get(array, i) != nil ? IOSObjectArray_Get(array, i) : (id) @"-"];
  }
  return [buf description];
}

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)str {
  if ([((NSString *) nil_chk(str)) java_length] == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter, EMPTY);
  }
  IOSObjectArray *split = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory, DELIMITER))) splitWithJavaLangCharSequence:str];
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(split))->size_ type:JavaLangFloat_class_()];
  for (jint i = 0; i < split->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(split, i))) isEqual:@"-"] == false) {
      IOSObjectArray_Set(array, i, JavaLangFloat_valueOfWithFloat_(JavaLangFloat_parseFloatWithNSString_(IOSObjectArray_Get(split, i))));
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_arrayType(JavaLangFloat_class_(), 1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangFloat;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[LJavaLangFloat;", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[Ljava/lang/Float;>;Ljava/lang/String;)[Ljava/lang/Float;", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1;
}

@end

void OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1_initWithNSString_withInt_(OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryNumericObjectArrayStringConverterFactory_FloatArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}
