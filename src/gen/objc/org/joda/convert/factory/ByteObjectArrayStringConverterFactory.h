//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-convert/src/main/java/org/joda/convert/factory/ByteObjectArrayStringConverterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory")
#ifdef RESTRICT_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory
#define INCLUDE_ALL_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory 0
#else
#define INCLUDE_ALL_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory 1
#endif
#undef RESTRICT_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_) && (INCLUDE_ALL_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory))
#define OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_

#define RESTRICT_OrgJodaConvertStringConverterFactory 1
#define INCLUDE_OrgJodaConvertStringConverterFactory 1
#include "org/joda/convert/StringConverterFactory.h"

@class IOSClass;
@protocol OrgJodaConvertStringConverter;

@interface OrgJodaConvertFactoryByteObjectArrayStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory >

#pragma mark Public

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory)

inline id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory, INSTANCE, id<OrgJodaConvertStringConverterFactory>)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory)

#endif

#if !defined (OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_) && (INCLUDE_ALL_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter))
#define OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_OrgJodaConvertTypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "org/joda/convert/TypedStringConverter.h"

@class IOSClass;
@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_Enum) {
  OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter : JavaLangEnum < OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (IOSObjectArray *)convertFromStringWithIOSClass:(IOSClass *)arg0
                                     withNSString:(NSString *)arg1;

+ (OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_values_[];

inline OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_get_INSTANCE(void);
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_values(void);

FOUNDATION_EXPORT OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter *OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryByteObjectArrayStringConverterFactory_ByteArrayStringConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgJodaConvertFactoryByteObjectArrayStringConverterFactory")
