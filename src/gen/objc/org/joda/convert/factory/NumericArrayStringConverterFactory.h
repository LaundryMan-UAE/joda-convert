//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/joda-convert/src/main/java/org/joda/convert/factory/NumericArrayStringConverterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL")
#ifdef OrgJodaConvertFactoryNumericArrayStringConverterFactory_RESTRICT
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL 0
#else
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL 1
#endif
#undef OrgJodaConvertFactoryNumericArrayStringConverterFactory_RESTRICT

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_) && (OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_

#define OrgJodaConvertStringConverterFactory_RESTRICT 1
#define OrgJodaConvertStringConverterFactory_INCLUDE 1
#include "org/joda/convert/StringConverterFactory.h"

@class IOSClass;
@class JavaUtilRegexPattern;
@protocol OrgJodaConvertStringConverter;

/*!
 @brief Factory for <code>StringConverter</code> providing support for primitive arrays
 as a comma separated list.
 <p>
 To use, simply register the instance with a <code>StringConvert</code> instance.
 <p>
 This class is immutable and thread-safe.
 @since 1.5
 */
@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory >

#pragma mark Public

/*!
 @brief Finds a converter by type.
 @param cls  the type to lookup, not null
 @return the converter, null if not found
 @throws RuntimeException (or subclass) if source code is invalid
 */
- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory)

/*!
 @brief Singleton instance.
 */
inline id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory, INSTANCE, id<OrgJodaConvertStringConverterFactory>)

/*!
 @brief Delimiter to find.
 */
inline JavaUtilRegexPattern *OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER, JavaUtilRegexPattern *)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_) && (OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_INCLUDE))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define OrgJodaConvertTypedStringConverter_RESTRICT 1
#define OrgJodaConvertTypedStringConverter_INCLUDE 1
#include "org/joda/convert/TypedStringConverter.h"

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_) && (OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_INCLUDE))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define OrgJodaConvertTypedStringConverter_RESTRICT 1
#define OrgJodaConvertTypedStringConverter_INCLUDE 1
#include "org/joda/convert/TypedStringConverter.h"

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_) && (OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_INCLUDE))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define OrgJodaConvertTypedStringConverter_RESTRICT 1
#define OrgJodaConvertTypedStringConverter_INCLUDE 1
#include "org/joda/convert/TypedStringConverter.h"

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_) && (OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_INCLUDE))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define OrgJodaConvertTypedStringConverter_RESTRICT 1
#define OrgJodaConvertTypedStringConverter_INCLUDE 1
#include "org/joda/convert/TypedStringConverter.h"

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_) && (OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL || defined(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_INCLUDE))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define OrgJodaConvertTypedStringConverter_RESTRICT 1
#define OrgJodaConvertTypedStringConverter_INCLUDE 1
#include "org/joda/convert/TypedStringConverter.h"

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)

#endif

#pragma pop_macro("OrgJodaConvertFactoryNumericArrayStringConverterFactory_INCLUDE_ALL")
